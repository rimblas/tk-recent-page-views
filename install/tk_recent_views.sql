create table tk_recent_views (
    id             number        generated by default on null as identity (start with 1) primary key not null
  , application_id number        not null
  , view_user      varchar2(60)  not null
  , viewed_on      date          not null
  , page_id        number        not null
  , entity_id      number
  , created_by     varchar2(60)  not null default 
  coalesce(
    sys_context('APEX$SESSION','app_user')
  , regexp_substr(sys_context('userenv','client_identifier'),'^[^:]*')
  , sys_context('userenv','session_user')
)
  , created_on     date          not null default sysdate
  , updated_by     varchar2(60)
  , updated_on     date
)
enable primary key using index
/

create index tk_recent_views_i01 on tk_recent_views(application_id, view_user);

comment on table tk_recent_views is 'Holds users recent page views.'
/

--------------------------------------------------------
--  DDL for Trigger tk_recent_views_iu
--------------------------------------------------------
create or replace trigger tk_recent_views_iu
before update
on tk_recent_views
referencing old as old new as new
for each row
begin
  :new.updated_on := sysdate;
  :new.updated_by := coalesce(
                         sys_context('APEX$SESSION','app_user')
                       , regexp_substr(sys_context('userenv','client_identifier'),'^[^:]*')
                       , sys_context('userenv','session_user')
                     );
end;
/
alter trigger tk_recent_views_iu enable;
